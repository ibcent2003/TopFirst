@model Project.Models.IndexViewModel
@{
    ViewBag.Title = "Pre-Order Online";
    Layout = "~/Views/Shared/_BlankLayout.cshtml";
}


<div class="breadcrumb_section page_title_light background_bg overlay_bg_80" data-img-src="../Content/NewFront/assets/images/slider1.jpg" style="background-image: url(&quot;../Content/NewFront/assets/images/slider1.jpg&quot;);">
    <div class="container">
        <!-- STRART CONTAINER -->
        <div class="row align-items-center">
            <div class="col-lg-5 offset-lg-1 col-md-5">
                <ol class="breadcrumb justify-content-md-end mb-3 mb-md-0">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home", new { Area = ""})">Home</a></li>
                    <li class="breadcrumb-item active">Pre-Order Online</li>
                </ol>
            </div>
            <div class="col-lg-6 col-md-7 order-md-first">
                <div class="page-title">
                    <h1>Pre-Order Online</h1>
                </div>

            </div>
        </div>
    </div><!-- END CONTAINER-->
</div>


<div class="section">
    <div class="container">
        <div class="row">


            <div class="col-md-12">
                @if (TempData["Message"] != null)
                {
                    var alertType = (TempData["MessageType"] != null) ? TempData["MessageType"] : "alert-info";                    
                    <div class="alert alert_style1 alert-primary" role="alert">
                        <i class="ti-thumb-up"></i>
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                        @Html.Raw(TempData["Message"])
                        
                    </div>
                }


            </div>
        </div>
      
    </div>
</div>

<div id="blog" class="section pb_70 bg_redon">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="heading_s1 text-center">
                    <h2>Pre-Order Your Forex</h2>
                </div>
                <div class="clearfix small_divider"></div>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-12">
                <div class="container">
                    <div class="field_form">
                      
                            @using (Html.BeginForm("PreOrder", "Home", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "needs-validation row" }))
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-group col-md-4">
                                    <label for="validationCustom01">Full Name</label>
                                    @Html.TextBoxFor(x => x.preOrderForm.fname, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.preOrderForm.fname)
                                </div>

                                <div class="form-group col-md-4">
                                    <label for="validationCustom01">Email Address</label>
                                    @Html.TextBoxFor(x => x.preOrderForm.Email, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.preOrderForm.Email)
                                </div>

                                <div class="form-group col-md-4">
                                    <label for="validationCustom01">Mobile No</label>
                                    @Html.TextBoxFor(x => x.preOrderForm.MobileNumber, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.preOrderForm.MobileNumber)
                                </div>

                                <div class="form-group col-md-4">
                                    <label for="validationCustom04">Order Type</label>

                                    @Html.DropDownListFor(m => m.preOrderForm.BuyingOrSelling,
                            new List<SelectListItem>
                             {
                           new SelectListItem { Text = "I am Buying", Value = "Buying"},
                           new SelectListItem { Text = "I am Selling", Value = "Selling"}

                             }, new { @class = "form-control" }
                                )
                                </div>
                                <div class="form-group col-md-4">
                                    <label for="validationCustom01">Currency</label>
                                    @Html.DropDownListFor(x => x.preOrderForm.Country, Model.Currencies, "Select Currency", new { @class = "custom-select form-control first_null not_chosen" })
                                    @Html.ValidationMessageFor(x => x.preOrderForm.Country)
                                </div>
                                <div class="form-group col-md-4">
                                    <label for="validationCustom02">Amount</label>
                                    @Html.TextBoxFor(x => x.preOrderForm.Amount, new { @class = "form-control" })
                                </div>
                                <div class="form-group col-md-12">                                    
                                    <input type="submit" class="btn btn-success" value="Submit" />
                                </div>
                            }
</div>
                </div>
            </div>

        </div>
    </div>
</div>